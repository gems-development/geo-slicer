using System;
using System.Collections;
using System.Collections.Generic;
using GeoSlicer.Utils.AccuracyCalculation;

namespace GeoSlicer.Tests.UtilsTests;

public class GeojsonAccuracyCalculatorTests
{
    private readonly GeojsonAccuracyCalculator _calculator = new GeojsonAccuracyCalculator();
    
    [Theory]
    [InlineData(7, "\"coordinates\": [ [ [ [ 103.6994241, 51.6979841 ], [ 103.6994261, 51.6979512 ], [ 103.6994764, 51.6978681 ], [ 103.6996146, 51.697598 ], [ 103.6997513, 51.6974143 ], [ 103.699805, 51.6972929 ], [ 103.6998318, 51.6972131 ], [ 103.6998586, 51.697105 ], [ 103.6998962, 51.6970186 ], [ 103.6999297, 51.6969604 ],")]
    [InlineData(7, "61, 51.6979512 ], [ 103.6994764, 51.6978681 ], [ 103.6996146, 51.697598 ], [ 103.6997513, 51.6974143 ], [ 103.699805, 51.6972929 ], [ 103.6998318, 51.6972131 ], [ 103.6998586, 51.697105 ], [ 103.6998962, 51.6970186 ], [ 103.6999297, 51.6969604 ],")]
    [InlineData(7, "61, 51.6512 ], [ 103.6964, 51.68681 ], [ 1036996146, 51.6975 ], [ 103.69913, 51.697443 ], [ 103.6998, 51.697292 ], [ 103.698318, 51.6972131 ], [ 103., 51. ], [ 103. , 51.0186 ], [ 103.699297, 51.69696,")]
    [InlineData(8, "61, 51.6512 ], [ 103.6964, 51.68681 ], [ 1036996146, 51.6975 ], [ 103.69913, 51.697443 ], [ 103.6998, 51.697292 ], [ 103.698318, 51.6972131 ], [ 103., 51. ], [ 103. , 51.0186 ], [ 103.699297, 51.69696463")]
    public void CalculateCharTest(int expected, string geojson)
    {
        int actual = _calculator.Calculate(geojson);
        
        Assert.Equal(expected, actual);
    }
    
    [Theory]
    [InlineData(7, "\"coordinates\": [ [ [ [ 103.6994241, 51.6979841 ], [ 103.6994261, 51.6979512 ], [ 103.6994764, 51.6978681 ], [ 103.6996146, 51.697598 ], [ 103.6997513, 51.6974143 ], [ 103.699805, 51.6972929 ], [ 103.6998318, 51.6972131 ], [ 103.6998586, 51.697105 ], [ 103.6998962, 51.6970186 ], [ 103.6999297, 51.6969604 ],")]
    [InlineData(7, "61, 51.6979512 ], [ 103.6994764, 51.6978681 ], [ 103.6996146, 51.697598 ], [ 103.6997513, 51.6974143 ], [ 103.699805, 51.6972929 ], [ 103.6998318, 51.6972131 ], [ 103.6998586, 51.697105 ], [ 103.6998962, 51.6970186 ], [ 103.6999297, 51.6969604 ],")]
    [InlineData(7, "61, 51.6512 ], [ 103.6964, 51.68681 ], [ 1036996146, 51.6975 ], [ 103.69913, 51.697443 ], [ 103.6998, 51.697292 ], [ 103.698318, 51.6972131 ], [ 103., 51. ], [ 103. , 51.0186 ], [ 103.699297, 51.69696,")]
    [InlineData(8, "61, 51.6512 ], [ 103.6964, 51.68681 ], [ 1036996146, 51.6975 ], [ 103.69913, 51.697443 ], [ 103.6998, 51.697292 ], [ 103.698318, 51.6972131 ], [ 103., 51. ], [ 103. , 51.0186 ], [ 103.699297, 51.69696463")]
    public void CalculateStringTest(int expected, string geojson)
    {
        IEnumerable<string> enumerable = new[] { geojson };
        int actual = _calculator.Calculate(geojson);
        
        Assert.Equal(expected, actual);
    }
}